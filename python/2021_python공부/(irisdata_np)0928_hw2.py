# -*- coding: utf-8 -*-
"""(irisData_np)0928_hw2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1tzlDgsvxuQ6OsG6ZJpeYyNZDvUKkgv7J

## 1. data-iris-1.csv  파일을 numpy를 이용하여 load하고 변수에 저장
"""

import numpy as np
iris = np.loadtxt('data-iris-1.csv', delimiter=',',dtype=np.float32)
print(iris)

"""## 2. 저장된 데이터를 tolist() 함수를 이용하여 list로 변환"""

print(iris.tolist())

"""## 3. list로 변환된 2차원 리스트 데이터에 대하여 다음을 구하는 코드 작성

### (a)  2번째과 3번째 열의 데이터의 평균과 분산을 을 각각 구하여 출력
"""

s = iris[:, 1:2] # 2번째 열 데이터 추출
# 2번째 열 평균
def avr_s() :
  iris_len = len(iris)
  val = 0
  for i in s :
    val += i 
  return(val/iris_len)
print(avr_s())
# 2번째 열 분산
val = 0
for i in s:
  val = val + (i - avr_s())**2
variance = val / len(iris)
print(variance)

t = iris[:, 2:3]# 3번째 열 데이터 추출
# 3번째 열 평균
def avr_t() :
  iris_len = len(iris)
  val = 0
  for i in t :
    val += i 
  return(val/iris_len)
print(avr_t())
# 3번째 열 분산
val = 0
for i in t:
  val = val + (i - avr_t())**2
variance = val / len(iris)
print(variance)

#분산 관련_잘 안되었던 코딩; val=0을 안해줘서 그런듯
# val = 0  #이거 안해줘서!
for i in s:
  val = val + (i - avr_s())**2
variance = val / iris_len
print(variance)


# 위 문제를 numpy로 구하면 점수 없음. 반드시  list 를 이용하여 작성 
# 평균과 분산를 구하는 코드 작성 시 단순 함수 사용 금지. 반드시  for문을 사용하여 코드 작성해야 함.

"""### (b)  4번째행 (인덱스 번호 3) 부터   8번째 (인덱스번호 7)까지의 행을 출력"""

fe = iris[3:8, :] 
print(fe)

"""### (c) 마지막 열의 데이터만을 저장하는 리스트 변수를 작성하고 출력 """

last = iris[:,[-1]] 
print(last)

"""# Practice- 21-10-18"""

import numpy as np
iris1 = np.loadtxt("data-iris-1.csv", delimiter= ",", dtype=np.float32)
print(iris1)

print(iris1.tolist())

# 두 번째 열 평균과 분산
second = iris1[:,1]
m = 0
for i in second:
  m = m + i
  sSum = m / len(second)
print(sSum)

v = 0 
for i in second:
  v = v + (i - sSum)**2 
  sDer = v /  len(second)
print(sDer)


# # 두 번째 열 평균과 분산(함수버전)
second = iris1[:,1]
def sMean():
  m = 0
  for i in second:
    m = m + i
    sSum = m / len(second)
  print(sSum)

def sVar():
  v = 0 
  for i in second:
    v = v + (i - sSum)**2 
    sDer = v /  len(second)
  print(sDer)

sMean()
sVar()

# 세 번째 열 평균과 분산
third = iris1[:,2]
z = 0 
for i in third:
  z += i
  tMean = z / len(third)
print(tMean)

f = 0 
for i in third:
  f += (i - tMean)**2
  tVar = f / len(third)
print(tVar)

# 4번째 행부터 8번째 행 출력
print(iris1[3:9, :])

# 마지막 열 데이터만 저장하는 리스트 변수 작성하고 출력
lastData = iris1[:, -1]
print(lastData)

lastData2 = iris1[:, [-1]]
print(lastData2)


# -*- coding: utf-8 -*-
"""hw6_matplot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Dt6XGq_ZO4JhHobD95f2eKBZZhh-Ulf7

# 1. 데이터시각화 강의자료, p.18 3차원 산점도를 프로그래밍하고 그림을 출력하시오.
"""

from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
import numpy as np
n = 100
xmin, xmax, ymin, ymax, zmin, zmax = 0, 20, 0, 20, 0, 50
cmin, cmax = 0, 2
xs = np.array([(xmax - xmin) * np.random.random_sample() + xmin for i in range(n)])
ys = np.array([(ymax - ymin) * np.random.random_sample() + ymin for i in range(n)])
zs = np.array([(zmax - zmin) * np.random.random_sample() + zmin for i in range(n)])
color = np.array([(cmax - cmin) * np.random.random_sample() + cmin for i in range(n)])
fig = plt.figure(figsize=(6,6))
ax = fig.add_subplot(111, projection = '3d')
ax.scatter(xs, ys, zs, c = color, marker = 'o', s = 15, cmap = 'Greens')
plt.show()

"""# 2. subplot 함수를 이용하여 아래의 표와 같이 위치하도록 그래프를 출력하시오. 그래프의 x축 범위는 본인이 알아서 결정할 것."""

import matplotlib.pyplot as plt
import numpy as np
from mpl_toolkits.mplot3d import Axes3D
import numpy as np
from numpy import random

plt.subplot(3,2,1)
# sine그래프 
X = np.linspace(0,4*np.pi,200)
Y = np.sin(X)
plt.plot(X,Y)


plt.subplot(3,2,2)
# cosine 그래프
Z = np.linspace(0,4*np.pi,200)
F = np.cos(Z)
plt.plot(Z,F)


plt.subplot(3,2,3)
# sin 함수
X = np.linspace(0,4*np.pi,200)
Y = np.sin(X)
plt.plot(X,Y)
# cos 함수
Z = np.linspace(0,4*np.pi,200)
F = np.cos(Z)
plt.plot(Z,F)


plt.subplot(3,2,4)
# cos 함수
Z = np.linspace(0,4*np.pi,200)
F = 2 * np.cos(Z)
plt.plot(Z,F)
# sin 함수
X = np.linspace(0,4*np.pi,200)
Y = 0.5 * np.sin(X)
plt.plot(X,Y)


plt.subplot(3,2,5)
fig = plt.figure()
ax = Axes3D(fig)
X = np.arange(-5,5,0.2)
Y = np.arange(-5,5,0.2)
X, Y = np.meshgrid(X, Y)  # X, Y 값을 직교좌표계로 변환
Z = np.sqrt(X**2 + Y**2)  # Z = X^2 + Y^2 함수 생성
ax.plot_surface(X, Y, Z, rstride = 1, cstride = 1, cmap = 'summer')  # 3D 그래프 생성
ax.contourf(X, Y, Z, zdir = 'z', offset = 0, cmap = plt.cm.summer)  # 등고선 생성

plt.subplot(3,2,6)
# cos 함수
Z = np.linspace(0,4*np.pi,200)
signal = 2 * np.cos(Z)
noise = 0.23* (random.rand(len(Z)) - 0.5)
noisy_signal = signal + noise
#fig, ax = plt.subplots(figsize = (6, 2.5))
#ax.plot(Z, noisy_signal)
# sin 함수
X = np.linspace(0,4*np.pi,200)
signal2 = 0.5 * np.sin(X)
noise2 = 0.23* (random.rand(len(X)) - 0.5)
noisy_signal2 = signal2 + noise2
fig, ax = plt.subplots(figsize = (6, 2.5))
# ax.plot(X, noisy_signal2)
# 그래프 겹쳐서 그리기
plt.plot(Z, noisy_signal)
plt.plot(X, noisy_signal2)

"""## subplots_sources"""

fig = plt.figure()
ax = Axes3D(fig)
X = np.arange(-5,5,0.2)
Y = np.arange(-5,5,0.2)
X, Y = np.meshgrid(X, Y)  # X, Y 값을 직교좌표계로 변환
Z = np.sqrt(X**2 + Y**2)  # Z = X^2 + Y^2 함수 생성
ax.plot_surface(X, Y, Z, rstride = 1, cstride = 1, cmap = 'summer')  # 3D 그래프 생성
ax.contourf(X, Y, Z, zdir = 'z', offset = 0, cmap = plt.cm.summer)  # 등고선 생성

# sine그래프 
import matplotlib.pyplot as plt
import numpy as np

X = np.linspace(0,4*np.pi,200)
Y = np.sin(X)
plt.plot(X,Y)
plt.show()

# cosine 그래프
Z = np.linspace(0,4*np.pi,200)
F = np.cos(Z)
plt.plot(Z,F)
plt.show()

# sine그래프와 consine 그래프(단 다른 색깔로 구분)
import matplotlib.pyplot as plt
import numpy as np

# 파란색 = sin 함수
X = np.linspace(0,4*np.pi,200)
Y = np.sin(X)
plt.plot(X,Y)

# 주황색 = cos 함수
Z = np.linspace(0,4*np.pi,200)
F = np.cos(Z)
plt.plot(Z,F)
plt.show()

# 2 cos(10𝜋𝑡) + 0.5sin (5𝜋𝑡)
import matplotlib.pyplot as plt
import numpy as np

# 파란색 = cos 함수
Z = np.linspace(0,4*np.pi,200)
F = 2 * np.cos(Z)
plt.plot(Z,F)


# 주황색 = sin 함수
X = np.linspace(0,4*np.pi,200)
Y = 0.5 * np.sin(X)
plt.plot(X,Y)
plt.show()

# 강의자료 p. 28의 그림 출력_ 3차원 그래프
from mpl_toolkits.mplot3d import Axes3D
import numpy as np

fig = plt.figure()
ax = Axes3D(fig)
X = np.arange(-5,5,0.2)
Y = np.arange(-5,5,0.2)
X, Y = np.meshgrid(X, Y)  # X, Y 값을 직교좌표계로 변환
Z = np.sqrt(X**2 + Y**2)  # Z = X^2 + Y^2 함수 생성
ax.plot_surface(X, Y, Z, rstride = 1, cstride = 1, cmap = 'summer')  # 3D 그래프 생성
ax.contourf(X, Y, Z, zdir = 'z', offset = 0, cmap = plt.cm.summer)  # 등고선 생성

plt.show()

# 2 cos(10𝜋𝜋𝑡𝑡) + 0.5 sin(5𝜋𝜋𝑡𝑡) 에 평균 0.23, 표준편차 0.5인 가우시안 노이즈를 합산한 그래프
import matplotlib.pyplot as plt
import numpy as np
from numpy import random

# 파란색 = cos 함수
Z = np.linspace(0,4*np.pi,200)
signal = 2 * np.cos(Z)
noise = 0.23* (random.rand(len(Z)) - 0.5)
noisy_signal = signal + noise
# fig, ax = plt.subplots(figsize = (6, 2.5))
# ax.plot(Z, noisy_signal)

# 주황색 = sin 함수
X = np.linspace(0,4*np.pi,200)
signal2 = 0.5 * np.sin(X)
noise2 = 0.23* (random.rand(len(X)) - 0.5)
noisy_signal2 = signal2 + noise2
fig, ax = plt.subplots(figsize = (6, 2.5))
# ax.plot(X, noisy_signal2)

# 그래프 겹쳐서 그리기
plt.plot(Z, noisy_signal)
plt.plot(X, noisy_signal2)

"""# Signal_Practice"""

# 깨끗한 signal
import matplotlib.pyplot as plt
import numpy as np
from numpy import random

t = np.linspace(0, 1, 1001)
signal = np.sin(2*np.pi*2*t)
# noise = 0.5 * (random.rand(len(t)) - 0.5)
noisy_signal = signal # + noise
fig, ax = plt.subplots(figsize = (6, 2.5))
ax.plot(t, noisy_signal)

# 깨끗하지 않는 signal
import matplotlib.pyplot as plt
import numpy as np
from numpy import random

t = np.linspace(0, 1, 1001)
signal = np.sin(2*np.pi*2*t)
noise = 0.5 * (random.rand(len(t)) - 0.5)
noisy_signal = signal + noise
fig, ax = plt.subplots(figsize = (6, 2.5))
ax.plot(t, noisy_signal)

# 2 cos(10𝜋𝜋𝑡𝑡) + 0.5 sin(5𝜋𝜋𝑡𝑡) 에 평균 0.23, 표준편차 0.5인 가우시안 노이즈를 합산한 그래프
# 그래프 각각 보이기
import matplotlib.pyplot as plt
import numpy as np
from numpy import random

# 파란색 = cos 함수
Z = np.linspace(0,4*np.pi,200)
signal = 2 * np.cos(Z)
noise = 0.23* (random.rand(len(Z)) - 0.5)
noisy_signal = signal + noise
fig, ax = plt.subplots(figsize = (6, 2.5))
ax.plot(Z, noisy_signal)


# 주황색 = sin 함수
X = np.linspace(0,4*np.pi,200)
signal2 = 0.5 * np.sin(X)
noise2 = 0.23* (random.rand(len(X)) - 0.5)
noisy_signal2 = signal2 + noise2
fig, ax = plt.subplots(figsize = (6, 2.5))
ax.plot(X, noisy_signal2)

# plt.plot(Z, noisy_signal)
# plt.plot(X, noisy_signal2)

"""# 3. 데이터시각화 강의자료, p.29의 그래프가 출력되도록 프로그래밍"""

import matplotlib.pyplot as plt
import numpy as np

def make_linear(w = 0.5, b = 0.8, size = 50, noise = 1.0):
  x = np.arange(size)
  y = w * x + b
  noise = np.random.uniform(-abs(noise), abs(noise), size = y.shape)
  yy =y + noise
  m, b = np.polyfit(x, y, 1)
  plt.plot(x, m*x + b,'r', label='y = 1.5*x + 0.8')
  plt.scatter(x,yy, label='data')
  plt.legend()
  return x, yy


plt.plot([1,2,3,4],[2,3,5,10],)

x , y = make_linear(size = 50, w = 1.5, b = 0.8, noise = 5.5)
x_bar = x.mean()
y_bar = y.mean()

calculated_weight = ((x - x_bar) * (y - y_bar)).sum() / ((x - x_bar)** 2).sum()
print('w: {:.2f}'.format(calculated_weight))
calculated_bias = y_bar - calculated_weight * x_bar
print('b: {:.2f}'.format(calculated_bias))

"""# 4. 아래 링크에 존재하는 데이터에 대해 아래 프로그래밍을 완성하시오.
+ 링크: https://github.com/dknife/ML/raw/main/data/weather.csv


"""

# read file
import pandas as pd
path =  '/content/'
weather_file = path + 'weather.csv'
weather = pd.read_csv(weather_file, index_col = 0, encoding = 'CP949')
# save to Pandas DataFrame
weather = pd.DataFrame(weather)
# index를 column으로 
weather['일시'] = weather.index
weather

"""## (a) 8월, 9월, 10월의 일별 평균 기온이 변화하는 그래프를 하나의 plot으로 color와 marker 또는 linestyle을 다르게 하여 그리시오. (반드시 matplotlib 사용해야함)"""

import matplotlib.pyplot as plt
# 8월
weather_aug = pd.DataFrame(weather[weather['일시'].str.contains('-08-')])
y = list(weather_aug['평균기온'])

# 9월
weather_sep = pd.DataFrame(weather[weather['일시'].str.contains('-09-')])
z = list(weather_sep['평균기온'])

# 10월
weather_oct = pd.DataFrame(weather[weather['일시'].str.contains('-10-')])
f = list(weather_oct['평균기온'])

# x = np.arange(1,32,1)
plt.plot(y, color = 'orange', marker = '*', linewidth =0.5)
plt.plot(z, color = 'seagreen', marker = '*', linewidth =1.0)
plt.plot(f, color = 'peru', marker = '^', linewidth =2.0)

"""### sources"""

# 8월
weather_aug = pd.DataFrame(weather[weather['일시'].str.contains('-08-')])
weather_aug_new = weather_aug[['평균기온','일시']]
weather_aug_new

# 9월
weather_sep = pd.DataFrame(weather[weather['일시'].str.contains('-09-')])
weather_sep_new = weather_sep[['평균기온','일시']]
weather_sep_new

# 10월
weather_oct = pd.DataFrame(weather[weather['일시'].str.contains('-10-')])
weather_oct_neweather_oct_neww = weather_oct[['평균기온','일시']]

"""## (b) (a)문제에서 범례에 8월, 9월, 10월의 평균 기온이 표시되도록 프로그래밍 하시오. (범례의 위치는 본인의 선호대로 지정할 것)"""

import matplotlib.pyplot as plt
# 8월
weather_aug = pd.DataFrame(weather[weather['일시'].str.contains('-08-')])
y = list(weather_aug['평균기온'])
# 9월
weather_sep = pd.DataFrame(weather[weather['일시'].str.contains('-09-')])
z = list(weather_sep['평균기온'])
# 10월
weather_oct = pd.DataFrame(weather[weather['일시'].str.contains('-10-')])
f = list(weather_oct['평균기온'])

# x = np.arange(1,32,1)
plt.plot(y, color = 'orange', marker = '*', linewidth =0.5, label='August_mean_temp')
plt.plot(z, color = 'seagreen', marker = '*', linewidth =1.0, label='Septemberr_mean_temp')
plt.plot(f, color = 'peru', marker = '^', linewidth =2.0, label='October_mean_temp')
plt.legend(loc =(1,0)) #범례 위치 선정_그래프를 가리지 않기 위해 바깥에 위치하게 함.
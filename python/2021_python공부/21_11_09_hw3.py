# -*- coding: utf-8 -*-
"""21-11-09_hw3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QSCVM5glAwC5vPMOxZk7F3N9IvFOcWvH

# 1번 문제

## 1-(a)
"""

import pandas as pd
import numpy as np
name_series = pd.Series(['A','B', 'C', 'D', 'E', 'F', 'G'])
power_series = pd.Series([130, 250, 190, 300, 210, 220, 170])
weight_series = pd.Series([1900, 2200, 2200, 2900, 2400, 2300, 2200])
fuel_series = pd.Series([16.3, 10.2, 11.1, 7.1, 12.1, 13.2, 14.2])

df = pd.DataFrame({'name':name_series,'horse power':power_series,'weight':weight_series,'efficiency':fuel_series})
df

"""## 1-(b)"""

import pandas as pd

name_series = pd.Series(['A','B', 'C', 'D', 'E', 'F', 'G'])
power_series = pd.Series([130, 250, 190, 300, 210, 220, 170])
weight_series = pd.Series([1900, 2200, 2200, 2900, 2400, 2300, 2200])
fuel_series = pd.Series([16.3, 10.2, 11.1, 7.1, 12.1, 13.2, 14.2])

df = pd.DataFrame({'name':name_series,'horse power':power_series,'weight':weight_series,'efficiency':fuel_series})
# index 숨기기
df.style.hide_index()

"""## 1-(c)
마력(horse power)과 연비(efficiency)를 곱한 값이 가장 큰 차종을 찾기 위해, 
(b) 문제의 표의 맨 오른쪽 열을 추가하고 다음과 같이 출력하시오.

"""

import pandas as pd

name_series = pd.Series(['A','B', 'C', 'D', 'E', 'F', 'G'])
power_series = pd.Series([130, 250, 190, 300, 210, 220, 170])
weight_series = pd.Series([1900, 2200, 2200, 2900, 2400, 2300, 2200])
fuel_series = pd.Series([16.3, 10.2, 11.1, 7.1, 12.1, 13.2, 14.2])

df = pd.DataFrame({'name':name_series,'horse power':power_series,'weight':weight_series,'efficiency':fuel_series})
# 'best'라는 마력*연비의 값을 새로운 열을 추가
# 마력과 연비를 곱한 값 중 최대값을 가진 차종: F
df['best'] = df['horse power'] * df['efficiency']
# 1-(b)문제처럼 index 숨기기
df.style.hide_index()

"""# 2번 문제

## 2-(a) 위 날씨 데이터를 판다스 데이터프레임에 저장하고 출력하시오.
"""

import pandas as pd
path =  '/content/'
weather_file = path + 'weather.csv'
weather = pd.read_csv(weather_file, index_col = 0, encoding = 'CP949')
# save to Pandas DataFrame
weather = pd.DataFrame(weather)
# index를 column으로 
weather['일시'] = weather.index
weather

"""## 2-(b) 8월의 평균기온의 평균을 구하여 출력하시오."""

weather_aug = pd.DataFrame(weather[weather['일시'].str.contains('-08-')])
weather_aug['평균기온'].mean()

"""## 2-(c) 9월의 평균기온의 평균을 구하여 출력하시오.

"""

weather_sep = pd.DataFrame(weather[weather['일시'].str.contains('-09-')])
weather_sep['평균기온'].mean()

"""## 2-(d) 8월의 평균기온 중 22.0도 이상인 날이 몇일 인지 출력하시오."""

weather_aug = pd.DataFrame(weather[weather['일시'].str.contains('-08-')])
print(weather_aug.query('평균기온 >= 22.0'))
len(weather_aug.query('평균기온 >= 22.0')) # 총 272일

"""## 2-(e) 9월의 일별 평균 기온이 변화하는 그래프를 그려 출력하시오. (9월 1일부터 9월 30일까지..)"""

# # import matplotlib.pyplot as plt
# # weather_sep = pd.DataFrame(weather[weather['일시'].str.contains('-09-')])
# # print(weather_sep)

# # 차트 종류, 제목, 차트 크기, 범례, 폰트 크기 설정
# ax = city_df.plot(kind='bar', title='날씨', figsize=(12, 4), legend=True, fontsize=12)
# ax.set_xlabel('도시', fontsize=12)          # x축 정보 표시
# ax.set_ylabel('기온/습도', fontsize=12)     # y축 정보 표시
# ax.legend(['기온', '습도'], fontsize=12)    # 범례 지정

weather_sep = pd.DataFrame(weather[weather['일시'].str.contains('-09-')])

# 9월 1일
weather_sep1 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-01')])
weather_sep1 = print(weather_sep1['평균기온'].mean())

# 9월 2일
weather_sep2 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-02')])
weather_sep2 = print(weather_sep2['평균기온'].mean())

# 9월 3일
weather_sep3 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-03')])
weather_sep3 = print(weather_sep3['평균기온'].mean())

# 9월 4일
weather_sep4 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-04')])
weather_sep4 = print(weather_sep4['평균기온'].mean())

# 9월 5일
weather_sep5 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-05')])
weather_sep5 = print(weather_sep5['평균기온'].mean())

# 9월 6일
weather_sep6 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-06')])
weather_sep6 = print(weather_sep6['평균기온'].mean())

# 9월 7일
weather_sep7 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-07')])
weather_sep7 = print(weather_sep7['평균기온'].mean())

# 9월 8일
weather_sep8 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-08')])
weather_sep8 = print(weather_sep8['평균기온'].mean())

# 9월 9일
weather_sep9 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-09')])
weather_sep9 = print(weather_sep9['평균기온'].mean())

# 9월 10일
weather_sep10 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-10')])
weather_sep10 = print(weather_sep10['평균기온'].mean())

# 9월 11일
weather_sep11 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-11')])
weather_sep11 = print(weather_sep11['평균기온'].mean())

# 9월 12일
weather_sep12 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-12')])
weather_sep12 = print(weather_sep12['평균기온'].mean())

# 9월 13일
weather_sep13 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-13')])
weather_sep13 = print(weather_sep13['평균기온'].mean())

# 9월 14일
weather_sep14 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-14')])
weather_sep14 = print(weather_sep14['평균기온'].mean())

# 9월 15일
weather_sep15 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-15')])
weather_sep15 = print(weather_sep15['평균기온'].mean())

# 9월 16일
weather_sep16 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-16')])
weather_sep16 = print(weather_sep16['평균기온'].mean())

# 9월 17일
weather_sep17 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-17')])
weather_sep17 = print(weather_sep17['평균기온'].mean())

# 9월 18일
weather_sep18 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-18')])
weather_sep18 = print(weather_sep18['평균기온'].mean())

# 9월 19일
weather_sep19 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-19')])
weather_sep19 = print(weather_sep19['평균기온'].mean())

# 9월 20일
weather_sep20 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-20')])
weather_sep20 = print(weather_sep20['평균기온'].mean())

# 9월 21일
weather_sep21 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-21')])
weather_sep21 = print(weather_sep21['평균기온'].mean())

# 9월 22일
weather_sep22 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-22')])
weather_sep22 = print(weather_sep22['평균기온'].mean())

# 9월 23일
weather_sep23 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-23')])
weather_sep23 = print(weather_sep23['평균기온'].mean())

# 9월 24일
weather_sep24 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-24')])
weather_sep24 = print(weather_sep24['평균기온'].mean())

# 9월 25일
weather_sep25 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-25')])
weather_sep25 = print(weather_sep25['평균기온'].mean())

# 9월 26일
weather_sep26 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-26')])
weather_sep26 = print(weather_sep26['평균기온'].mean())

# 9월 27일
weather_sep27 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-27')])
weather_sep27 = print(weather_sep27['평균기온'].mean())

# 9월 28일
weather_sep28 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-28')])
weather_sep28 = print(weather_sep28['평균기온'].mean())

# 9월 29일
weather_sep29 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-29')])
weather_sep29 = print(weather_sep29['평균기온'].mean())

# 9월 30일
weather_sep30 = pd.DataFrame(weather_sep[weather_sep['일시'].str.contains('-09-30')])
weather_sep30 = print(weather_sep30['평균기온'].mean())

import matplotlib.pyplot as plt
# df_new에 데이터 모두 넣기.
df_new= (weather_sep1, weather_sep2, weather_sep3, weather_sep4, weather_sep5, weather_sep6, weather_sep7, 
         weather_sep8, weather_sep9, weather_sep10, weather_sep11, weather_sep12, weather_sep13, weather_sep14, 
         weather_sep15, weather_sep16, weather_sep17, weather_sep18, weather_sep19, weather_sep20, weather_sep21, 
         weather_sep22, weather_sep23, weather_sep24, weather_sep25, weather_sep26, weather_sep27, weather_sep28, weather_sep29, weather_sep30)
plt.figure(figsize=(10,5))
plt.title("September Daily Dgree", fontsize=15)
plt.plot(df_new, color='grey')
plt.grid()
plt.legend(fontsize=13)
plt.xticks(rotation=90)
plt.show()

# weather_sep1, weather_sep2, weather_sep3, weather_sep4, weather_sep5, weather_sep6, weather_sep7, weather_sep8, weather_sep9, weather_sep10, weather_sep11, weather_sep12, weather_sep13, weather_sep14, weather_sep15, weather_sep16, weather_sep17, weather_sep18, weather_sep19, weather_sep20, weather_sep21, weather_sep22, weather_sep23, weather_sep24, weather_sep25, weather_sep26, weather_sep27, weather_sep28, weather_sep29, weather_sep30
import matplotlib.pyplot as plt

d_ = [weather_sep1, weather_sep2, weather_sep3, weather_sep4, weather_sep5, weather_sep6, weather_sep7, weather_sep8, weather_sep9, weather_sep10, weather_sep11, weather_sep12, weather_sep13, weather_sep14, weather_sep15, weather_sep16, weather_sep17, weather_sep18, weather_sep19, weather_sep20, weather_sep21, weather_sep22, weather_sep23, weather_sep24, weather_sep25, weather_sep26, weather_sep27, weather_sep28, weather_sep29, weather_sep30]
plt.figure(figsize=(10,5))
plt.title("September Daily Dgree", fontsize=15)
plt.plot(d_["일시"], d_["평균기온"], color='grey', label=str(spot_))
plt.grid()
plt.legend(fontsize=13)
plt.xticks(rotation=90)
plt.show()

weather_sep = pd.DataFrame(weather[weather['일시'].str.contains('-09-')])
weather_sep_new = weather_sep[['평균기온','일시']]
weather_sep_new

